@use 'colors' as *;
@use 'breakpoints' as *;
@use 'sass:meta';

// Define pseudo-class states
$spica-states: (
  hover: ":hover",
  focus: ":focus"
);

// Generate interaction-based color utilities
@each $state-name, $pseudo in $spica-states {
  @each $name, $shades in $spica-colors {
    @if meta.type-of($shades) == "map" {
      @each $shade, $value in $shades {
        .#{$state-name}\:bg-#{"" + $name}-#{"" + $shade}#{$pseudo} {
          background-color: #{$value};
        }
        .#{$state-name}\:text-#{"" + $name}-#{"" + $shade}#{$pseudo} {
          color: #{$value};
        }
        .#{$state-name}\:border-#{"" + $name}-#{"" + $shade}#{$pseudo} {
          border-color: #{$value};
        }

        @each $bp, $size in $spica-breakpoints {
          @media (min-width: $size) {
            .#{$bp}\:#{$state-name}\:bg-#{"" + $name}-#{"" + $shade}#{$pseudo} {
              background-color: #{$value};
            }
            .#{$bp}\:#{$state-name}\:text-#{"" + $name}-#{"" + $shade}#{$pseudo} {
              color: #{$value};
            }
            .#{$bp}\:#{$state-name}\:border-#{"" + $name}-#{"" + $shade}#{$pseudo} {
              border-color: #{$value};
            }
          }
        }
      }
    } @else {
      .#{$state-name}\:bg-#{"" + $name}#{$pseudo} {
        background-color: #{$shades};
      }
      .#{$state-name}\:text-#{"" + $name}#{$pseudo} {
        color: #{$shades};
      }
      .#{$state-name}\:border-#{"" + $name}#{$pseudo} {
        border-color: #{$shades};
      }

      @each $bp, $size in $spica-breakpoints {
        @media (min-width: $size) {
          .#{$bp}\:#{$state-name}\:bg-#{"" + $name}#{$pseudo} {
            background-color: #{$shades};
          }
          .#{$bp}\:#{$state-name}\:text-#{"" + $name}#{$pseudo} {
            color: #{$shades};
          }
          .#{$bp}\:#{$state-name}\:border-#{"" + $name}#{$pseudo} {
            border-color: #{$shades};
          }
        }
      }
    }
  }
}
